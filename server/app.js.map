{"version":3,"sources":["app.js"],"names":["Promise","require","connect","mongo","uri","options","connection","on","err","console","error","process","exit","seedDB","app","server","createServer","socketio","serveClient","env","path","default","EventEmitter","prototype","_maxListeners","startServer","angularFullstack","listen","port","ip","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA,mBAASA,OAAT,GAAmBC,QAAQ,UAAR,CAAnB;;;AAIA;AACA,mBAASC,OAAT,CAAiB,sBAAOC,KAAP,CAAaC,GAA9B,EAAmC,sBAAOD,KAAP,CAAaE,OAAhD;AACA,mBAASC,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgC,UAASC,GAAT,EAAc;AAC5CC,UAAQC,KAAR,gCAA2CF,GAA3C;AACAG,UAAQC,IAAR,CAAa,CAAC,CAAd,EAF4C,CAE1B;AACnB,CAHD;;AAKA;AACA,IAAG,sBAAOC,MAAV,EAAkB;AAChBZ,UAAQ,eAAR;AACD;;AAED;AACA,IAAIa,MAAM,wBAAV;AACA,IAAIC,SAAS,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;AACA,IAAIG,WAAWhB,QAAQ,WAAR,EAAqBc,MAArB,EAA6B;AAC1CG,eAAa,sBAAOC,GAAP,KAAe,YADc;AAE1CC,QAAM;AAFoC,CAA7B,CAAf;AAIAnB,QAAQ,mBAAR,EAA6BoB,OAA7B,CAAqCJ,QAArC;AACAhB,QAAQ,kBAAR,EAA4BoB,OAA5B,CAAoCP,GAApC;AACAb,QAAQ,UAAR,EAAoBoB,OAApB,CAA4BP,GAA5B;AACAb,QAAQ,QAAR,EAAkBqB,YAAlB,CAA+BC,SAA/B,CAAyCC,aAAzC,GAAyD,GAAzD;AACA;AACA,SAASC,WAAT,GAAuB;AACrBX,MAAIY,gBAAJ,GAAuBX,OAAOY,MAAP,CAAc,sBAAOC,IAArB,EAA2B,sBAAOC,EAAlC,EAAsC,YAAW;AACtEpB,YAAQqB,GAAR,CAAY,4CAAZ,EAA0D,sBAAOF,IAAjE,EAAuEd,IAAIiB,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAED,4BAAaN,WAAb;;AAEA;AACAO,UAAUC,OAAOD,OAAP,GAAiBlB,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport mongoose from 'mongoose';\nmongoose.Promise = require('bluebird');\nimport config from './config/environment';\nimport http from 'http';\n\n// Connect to MongoDB\nmongoose.connect(config.mongo.uri, config.mongo.options);\nmongoose.connection.on('error', function(err) {\n  console.error(`MongoDB connection error: ${err}`);\n  process.exit(-1); // eslint-disable-line no-process-exit\n});\n\n// Populate databases with sample data\nif(config.seedDB) {\n  require('./config/seed');\n}\n\n// Setup server\nvar app = express();\nvar server = http.createServer(app);\nvar socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\nrequire('./config/socketio').default(socketio);\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\nrequire('events').EventEmitter.prototype._maxListeners = 100;\n// Start server\nfunction startServer() {\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nsetImmediate(startServer);\n\n// Expose app\nexports = module.exports = app;\n"],"sourceRoot":"/source/"}