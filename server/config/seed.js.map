{"version":3,"sources":["config/seed.js"],"names":["find","remove","then","create","name","info","provider","email","password","role","console","log"],"mappings":"AAAA;;;;;AAKA;;AACA;;;;AACA;;;;;;AAEA,gBAAMA,IAAN,CAAW,EAAX,EAAeC,MAAf,GACGC,IADH,CACQ,YAAM;AACV,kBAAMC,MAAN,CAAa;AACXC,UAAM,mBADK;AAEXC,UAAM,qFACE,8DADF,GAEE;AAJG,GAAb,EAKG;AACDD,UAAM,+BADL;AAEDC,UAAM,4DACE;AAHP,GALH,EASG;AACDD,UAAM,oBADL;AAEDC,UAAM,6DACE,2DADF,GAEE;AAJP,GATH,EAcG;AACDD,UAAM,mBADL;AAEDC,UAAM,+DACE;AAHP,GAdH,EAkBG;AACDD,UAAM,iBADL;AAEDC,UAAM,kEACE,gEADF,GAEE;AAJP,GAlBH,EAuBG;AACDD,UAAM,kBADL;AAEDC,UAAM,mEACE;AAHP,GAvBH;AA4BD,CA9BH;;AAgCA,eAAKL,IAAL,CAAU,EAAV,EAAcC,MAAd,GACGC,IADH,CACQ,YAAM;AACV,iBAAKC,MAAL,CAAY;AACVG,cAAU,OADA;AAEVF,UAAM,WAFI;AAGVG,WAAO,kBAHG;AAIVC,cAAU;AAJA,GAAZ,EAKG;AACDF,cAAU,OADT;AAEDG,UAAM,OAFL;AAGDL,UAAM,OAHL;AAIDG,WAAO,mBAJN;AAKDC,cAAU;AALT,GALH,EAYCN,IAZD,CAYM,YAAM;AACVQ,YAAQC,GAAR,CAAY,2BAAZ;AACD,GAdD;AAeD,CAjBH","file":"config/seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\nimport Thing from '../api/thing/thing.model';\nimport User from '../api/user/user.model';\n\nThing.find({}).remove()\n  .then(() => {\n    Thing.create({\n      name: 'Development Tools',\n      info: 'Integration with popular tools such as Webpack, Gulp, Babel, TypeScript, Karma, '\n            + 'Mocha, ESLint, Node Inspector, Livereload, Protractor, Pug, '\n            + 'Stylus, Sass, and Less.'\n    }, {\n      name: 'Server and Client integration',\n      info: 'Built with a powerful and fun stack: MongoDB, Express, '\n            + 'AngularJS, and Node.'\n    }, {\n      name: 'Smart Build System',\n      info: 'Build system ignores `spec` files, allowing you to keep '\n            + 'tests alongside code. Automatic injection of scripts and '\n            + 'styles into your index.html'\n    }, {\n      name: 'Modular Structure',\n      info: 'Best practice client and server structures allow for more '\n            + 'code reusability and maximum scalability'\n    }, {\n      name: 'Optimized Build',\n      info: 'Build process packs up your templates as a single JavaScript '\n            + 'payload, minifies your scripts/css/images, and rewrites asset '\n            + 'names for caching.'\n    }, {\n      name: 'Deployment Ready',\n      info: 'Easily deploy your app to Heroku or Openshift with the heroku '\n            + 'and openshift subgenerators'\n    });\n  });\n\nUser.find({}).remove()\n  .then(() => {\n    User.create({\n      provider: 'local',\n      name: 'Test User',\n      email: 'test@example.com',\n      password: 'test'\n    }, {\n      provider: 'local',\n      role: 'admin',\n      name: 'Admin',\n      email: 'admin@example.com',\n      password: 'admin'\n    })\n    .then(() => {\n      console.log('finished populating users');\n    });\n  });\n"],"sourceRoot":"/source/"}