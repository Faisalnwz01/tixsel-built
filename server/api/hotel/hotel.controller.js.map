{"version":3,"sources":["api/hotel/hotel.controller.js"],"names":["index","show","create","upsert","patch","destroy","expediaSearch","expediaPrice","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","searchForHotelsExpedia","location","checkInDate","checkOutDate","console","log","options","uri","headers","data","errors","Error","hotelList","catch","error","priceForHotels","hotelId","url","req","all","query","each","hotel","rate","lowRateInfo","findById","params","id","exec","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"api/hotel/hotel.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/hotels              ->  index\n * POST    /api/hotels              ->  create\n * GET     /api/hotels/:id          ->  show\n * PUT     /api/hotels/:id          ->  upsert\n * PATCH   /api/hotels/:id          ->  patch\n * DELETE  /api/hotels/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Hotel from './hotel.model';\nimport Q from 'q';\nimport rp from 'request-promise';\nimport _ from 'lodash';\n\nconst expediaSearch = 'http://terminal2.expedia.com/x/mhotels/search?';\nconst expediaPrice = 'http://terminal2.expedia.com/x/mhotels/offers?';\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n\n\nfunction searchForHotelsExpedia(location, checkInDate, checkOutDate) {\n  console.log(`${expediaSearch}city=${location}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}&room1=2&apikey=BAGEROtURYYysKTHQIE7HK5m0tOFIjSH`);\n  var options = {\n    uri: `${expediaSearch}city=${location}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}&room1=2&apikey=BAGEROtURYYysKTHQIE7HK5m0tOFIjSH`,\n    headers: {\n      'User-Agent': 'Request-Promise'\n    },\n    json: true // Automatically parses the JSON string in the response\n  };\n\n\n  return rp(options).then(function (data) {\n      if (data.errors) {\n        throw new Error(data.errors);\n      }\n      return data.hotelList;\n    })\n    .catch(function (err) {\n      console.error(JSON.stringify(err)); // This will print any error that was thrown in the previous error handler.\n      return err;\n    });\n}\n\nfunction priceForHotels(hotelId, checkInDate, checkOutDate) {\n  var url = expediaPrice + 'hotelId=' + hotelId + '&checkInDate=' + checkInDate + '&checkOutDate=' + checkOutDate + '&room1=2&apikey=BAGEROtURYYysKTHQIE7HK5m0tOFIjSH';\n  return rp(url).then(function (data) {\n    return data;\n  });\n}\n\n// Gets a list of Hotels\nexport function index(req, res) {\n  Q.all([\n      searchForHotelsExpedia(req.query.location, req.query.checkInDate, req.query.checkOutDate)\n    ])\n    .then(function (data) {\n      return _.each(data[0], function (hotel) {\n        hotel.rate = hotel.lowRateInfo;\n      });\n    })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Hotel from the DB\nexport function show(req, res) {\n  return Hotel.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Hotel in the DB\nexport function create(req, res) {\n  return Hotel.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Hotel in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Hotel.findOneAndUpdate({\n    _id: req.params.id\n  }, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n  .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Hotel in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Hotel.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Hotel from the DB\nexport function destroy(req, res) {\n  return Hotel.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}