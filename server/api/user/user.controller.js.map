{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","show","destroy","changePassword","me","authCallback","validationError","res","statusCode","err","status","json","handleError","send","req","find","exec","then","users","catch","newUser","body","provider","role","save","user","token","sign","_id","secrets","session","expiresIn","next","userId","params","id","findById","end","profile","findByIdAndRemove","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","findOne","redirect"],"mappings":"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","file":"api/user/user.controller.js","sourcesContent":["'use strict';\n\nimport User from './user.model';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.find({}, '-salt -password').exec()\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.role = 'user';\n  newUser.save()\n    .then(function(user) {\n      var token = jwt.sign({ _id: user._id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.findByIdAndRemove(req.params.id).exec()\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.findById(userId).exec()\n    .then(user => {\n      if(user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  return User.findOne({ _id: userId }, '-salt -password').exec()\n    .then(user => { // don't ever give out the password or salt\n      if(!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"],"sourceRoot":"/source/"}