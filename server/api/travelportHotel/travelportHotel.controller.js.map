{"version":3,"sources":["api/travelportHotel/travelportHotel.controller.js"],"names":["getHotelRates","getAllHotels","index","show","create","upsert","patch","destroy","HotelService","createHotelService","auth","debug","production","respondWithResult","res","statusCode","entity","console","log","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","searchForHotels","location","checkInDate","checkOutDate","lat","long","adults","children","search","startDate","endDate","currency","MaxWait","MaxProperties","rooms","rating","sorted","sortBy","hotels","o","distanceToEvent","getDistance","latitude","longitude","Location","lng","lowRate","Rates","ApproximateMinimumStayAmount","value","convertUnit","error","ratesPromise","each","hotel","i","hotelMediaParams","rateReq","push","rates","allSettled","all","handleError","send","req","body","find","exec","catch","params","id","add","format","dat","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","findById"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;;;;;;;;;;QA+FgBA,a,GAAAA,a;QAwBAC,Y,GAAAA,Y;QAcAC,K,GAAAA,K;QAUAC,I,GAAAA,I;QA6BAC,M,GAAAA,M;QAOAC,M,GAAAA,M;QAiBAC,K,GAAAA,K;QAYAC,O,GAAAA,O;;AA9MhB;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,eAAe,mBAAKC,kBAAL,CAAwB;AAC3CC,sBAD2C;AAE3CC,SAAO,CAFoC;AAG3CC,cAAY;AAH+B,CAAxB,CAArB;;AAMA,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,UAAhC,EAA4C;AAC1CA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAAUC,MAAV,EAAkB;AACvBC,YAAQC,GAAR,CAAY,kEAAZ;AACA,QAAIF,MAAJ,EAAY;AACV,aAAOF,IAAIK,MAAJ,CAAWJ,UAAX,EAAuBK,IAAvB,CAA4BJ,MAA5B,CAAP;AACD;AACD,WAAO,IAAP;AACD,GAND;AAOD;;AAED,SAASK,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAO,UAAUN,MAAV,EAAkB;AACvB,QAAI;AACF,8BAAUO,KAAV,CAAgBP,MAAhB,EAAwBM,OAAxB,EAAiC,YAAa,IAA9C;AACD,KAFD,CAEE,OAAOE,GAAP,EAAY;AACZ,aAAO,kBAAQC,MAAR,CAAeD,GAAf,CAAP;AACD;;AAED,WAAOR,OAAOU,IAAP,EAAP;AACD,GARD;AASD;;AAED,SAASC,YAAT,CAAsBb,GAAtB,EAA2B;AACzB,SAAO,UAAUE,MAAV,EAAkB;AACvB,QAAIA,MAAJ,EAAY;AACV,aAAOA,OAAOY,MAAP,GACJC,IADI,CACC,YAAM;AACVf,YAAIK,MAAJ,CAAW,GAAX,EAAgBW,GAAhB;AACD,OAHI,CAAP;AAID;AACF,GAPD;AAQD;;AAED,SAASC,oBAAT,CAA8BjB,GAA9B,EAAmC;AACjC,SAAO,UAAUE,MAAV,EAAkB;AACvB,QAAI,CAACA,MAAL,EAAa;AACXF,UAAIK,MAAJ,CAAW,GAAX,EAAgBW,GAAhB;AACA,aAAO,IAAP;AACD;AACD,WAAOd,MAAP;AACD,GAND;AAOD;;AAED,SAASgB,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgDC,YAAhD,EAA8DC,GAA9D,EAAmEC,IAAnE,EAAyEC,MAAzE,EAAiFC,QAAjF,EAA2F;AACzF,MAAMC,SAAS;AACbP,sBADa;AAEbQ,eAAWP,WAFE;AAGbQ,aAASP,YAHI;AAIbQ,cAAU,KAJG;AAKbC,aAAS,IALI;AAMbC,mBAAe,GANF;AAObC,WAAO,CAAC;AACNR,oBADM;AAENC;AAFM,KAAD,CAPM;AAWbQ,YAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAXK,GAAf;AAaA,SAAOvC,aAAagC,MAAb,CAAoBA,MAApB,EAA4BX,IAA5B,CACL,eAAO;AACL,QAAImB,SAAS,iBAAEC,MAAF,CAASnC,IAAIoC,MAAb,EAAqB,CAAC,UAAUC,CAAV,EAAa;AAC9C,UAAIC,kBAAkB,iBAAOC,WAAP,CAAmB;AACvCC,kBAAUlB,GAD6B;AAEvCmB,mBAAWlB;AAF4B,OAAnB,EAGnB;AACDiB,kBAAUH,EAAEK,QAAF,CAAWpB,GADpB;AAEDmB,mBAAWJ,EAAEK,QAAF,CAAWC;AAFrB,OAHmB,CAAtB;AAOAN,QAAEO,OAAF,GAAYP,EAAEQ,KAAF,CAAQ,CAAR,EAAWC,4BAAX,CAAwCC,KAApD;AACAV,QAAEC,eAAF,GAAoB,iBAAOU,WAAP,CAAmB,IAAnB,EAAyBV,eAAzB,CAApB;AACA,aAAOD,EAAEC,eAAT;AACD,KAXiC,CAArB,CAAb;AAYA,WAAOJ,MAAP;AACD,GAfI,EAgBL;AAAA,WAASe,KAAT;AAAA,GAhBK,CAAP;AAkBD;;AAEM,SAAS/D,aAAT,CAAuBkD,MAAvB,EAA+BjB,QAA/B,EAAyCC,WAAzC,EAAsDC,YAAtD,EAAoEC,GAApE,EAAyEC,IAAzE,EAA+EC,MAA/E,EAAuFC,QAAvF,EAAiG;AACtG,MAAMC,SAAS;AACbP,sBADa;AAEbQ,eAAWP,WAFE;AAGbQ,aAASP,YAHI;AAIbQ,cAAU,KAJG;AAKbC,aAAS,IALI;AAMbC,mBAAe,GANF;AAObC,WAAO,CAAC;AACNR,oBADM;AAENC;AAFM,KAAD,CAPM;AAWbQ,YAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAXK,GAAf;AAaA,MAAIiB,eAAe,EAAnB;AACA,mBAAEC,IAAF,CAAOf,MAAP,EAAe,UAACgB,KAAD,EAAQC,CAAR,EAAc;AAC3B,QAAMC,mBAAmBF,KAAzB;AACA,QAAMG,UAAU,sBAAc,EAAd,EAAkBD,gBAAlB,EAAoC5B,MAApC,CAAhB;AACAwB,iBAAaM,IAAb,CAAkB9D,aAAa+D,KAAb,CAAmBF,OAAnB,CAAlB;AACD,GAJD;AAKApD,UAAQC,GAAR,CAAY8C,YAAZ;AACA,SAAO,YAAEQ,UAAF,CAAaR,YAAb,CAAP;AACD;;AAEM,SAAS/D,YAAT,CAAsBgC,QAAtB,EAAgCC,WAAhC,EAA6CC,YAA7C,EAA2DC,GAA3D,EAAgEC,IAAhE,EAAsEC,MAAtE,EAA8EC,QAA9E,EAAwF;AAC7F,SAAO,YAAEkC,GAAF,CAAM,CACXzC,gBAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,YAAvC,EAAqDC,GAArD,EAA0DC,IAA1D,EAAgEC,MAAhE,EAAwEC,QAAxE,CADW,CAAN,CAAP;AAGD;;AAED,SAASmC,WAAT,CAAqB5D,GAArB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAaA,cAAc,GAA3B;AACA,SAAO,UAAUS,GAAV,EAAe;AACpBV,QAAIK,MAAJ,CAAWJ,UAAX,EAAuB4D,IAAvB,CAA4BnD,GAA5B;AACD,GAFD;AAGD;;AAED;AACO,SAAStB,KAAT,CAAe0E,GAAf,EAAoB9D,GAApB,EAAyB;AAC9BG,UAAQC,GAAR,CAAY0D,IAAIC,IAAhB;AACA,SAAO,0BAAgBC,IAAhB,GAAuBC,IAAvB,GACJlD,IADI,CACChB,kBAAkBC,GAAlB,CADD,EAEJkE,KAFI,CAEEN,YAAY5D,GAAZ,CAFF,CAAP;AAGD;;AAED;AACA;AACA;AACO,SAASX,IAAT,CAAcyE,GAAd,EAAmB9D,GAAnB,EAAwB;AAC7B,SAAO,YAAE2D,GAAF,CAAM,CACTzC,gBAAgB4C,IAAIK,MAAJ,CAAWC,EAA3B,EAA+B,wBAASC,GAAT,CAAa,EAAb,EAAiB,MAAjB,EAAyBC,MAAzB,CAAgC,YAAhC,CAA/B,EAA8E,wBAASD,GAAT,CAAa,EAAb,EAAiB,MAAjB,EAAyBC,MAAzB,CAAgC,YAAhC,CAA9E,EAA6H,WAA7H,EAA0I,aAA1I,EAAyJ,CAAzJ,EAA4J,CAA5J,CADS,CAAN,EAEFvD,IAFE,CAEG,eAAO;AACb,WAAOf,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBiE,IAAI,CAAJ,CAArB,CAAP;AACD,GAJI,EAKJL,KALI,CAKEN,YAAY5D,GAAZ,CALF,CAAP;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED;AACO,SAASV,MAAT,CAAgBwE,GAAhB,EAAqB9D,GAArB,EAA0B;AAC/B,SAAO,0BAAgBV,MAAhB,CAAuBwE,IAAIC,IAA3B,EACJhD,IADI,CACChB,kBAAkBC,GAAlB,EAAuB,GAAvB,CADD,EAEJkE,KAFI,CAEEN,YAAY5D,GAAZ,CAFF,CAAP;AAGD;;AAED;AACO,SAAST,MAAT,CAAgBuE,GAAhB,EAAqB9D,GAArB,EAA0B;AAC/B,MAAI8D,IAAIC,IAAJ,CAASS,GAAb,EAAkB;AAChB,WAAOV,IAAIC,IAAJ,CAASS,GAAhB;AACD;AACD,SAAO,0BAAgBC,gBAAhB,CAAiC;AACtCD,SAAKV,IAAIK,MAAJ,CAAWC;AADsB,GAAjC,EAEJN,IAAIC,IAFA,EAEM;AACXxE,YAAQ,IADG;AAEXmF,yBAAqB,IAFV;AAGXC,mBAAe;AAHJ,GAFN,EAMJV,IANI,GAQNlD,IARM,CAQDhB,kBAAkBC,GAAlB,CARC,EASJkE,KATI,CASEN,YAAY5D,GAAZ,CATF,CAAP;AAUD;;AAED;AACO,SAASR,KAAT,CAAesE,GAAf,EAAoB9D,GAApB,EAAyB;AAC9B,MAAI8D,IAAIC,IAAJ,CAASS,GAAb,EAAkB;AAChB,WAAOV,IAAIC,IAAJ,CAASS,GAAhB;AACD;AACD,SAAO,0BAAgBI,QAAhB,CAAyBd,IAAIK,MAAJ,CAAWC,EAApC,EAAwCH,IAAxC,GACJlD,IADI,CACCE,qBAAqBjB,GAArB,CADD,EAEJe,IAFI,CAECR,aAAauD,IAAIC,IAAjB,CAFD,EAGJhD,IAHI,CAGChB,kBAAkBC,GAAlB,CAHD,EAIJkE,KAJI,CAIEN,YAAY5D,GAAZ,CAJF,CAAP;AAKD;;AAED;AACO,SAASP,OAAT,CAAiBqE,GAAjB,EAAsB9D,GAAtB,EAA2B;AAChC,SAAO,0BAAgB4E,QAAhB,CAAyBd,IAAIK,MAAJ,CAAWC,EAApC,EAAwCH,IAAxC,GACJlD,IADI,CACCE,qBAAqBjB,GAArB,CADD,EAEJe,IAFI,CAECF,aAAab,GAAb,CAFD,EAGJkE,KAHI,CAGEN,YAAY5D,GAAZ,CAHF,CAAP;AAID","file":"api/travelportHotel/travelportHotel.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/travelportHotels              ->  index\n * POST    /api/travelportHotels              ->  create\n * GET     /api/travelportHotels/:id          ->  show\n * PUT     /api/travelportHotels/:id          ->  upsert\n * PATCH   /api/travelportHotels/:id          ->  patch\n * DELETE  /api/travelportHotels/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport TravelportHotel from './travelportHotel.model';\nimport Q from 'q';\nimport uAPI from 'uapi-json';\nimport config from '../../config/uAPI';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport geolib from 'geolib';\n\nconst HotelService = uAPI.createHotelService({\n  auth: config,\n  debug: 2,\n  production: false,\n});\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    console.log('******************** returning response ************************');\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction searchForHotels(location, checkInDate, checkOutDate, lat, long, adults, children) {\n  const search = {\n    location,\n    startDate: checkInDate,\n    endDate: checkOutDate,\n    currency: 'USD',\n    MaxWait: 9999,\n    MaxProperties: 100,\n    rooms: [{\n      adults,\n      children\n    }],\n    rating: [3, 4, 5],\n  };\n  return HotelService.search(search).then(\n    res => {\n      let sorted = _.sortBy(res.hotels, [function (o) {\n        let distanceToEvent = geolib.getDistance({\n          latitude: lat,\n          longitude: long\n        }, {\n          latitude: o.Location.lat,\n          longitude: o.Location.lng,\n        });\n        o.lowRate = o.Rates[0].ApproximateMinimumStayAmount.value;\n        o.distanceToEvent = geolib.convertUnit('mi', distanceToEvent);\n        return o.distanceToEvent;\n      }]);\n      return sorted;\n    },\n    error => error\n  );\n}\n\nexport function getHotelRates(hotels, location, checkInDate, checkOutDate, lat, long, adults, children) {\n  const search = {\n    location,\n    startDate: checkInDate,\n    endDate: checkOutDate,\n    currency: 'USD',\n    MaxWait: 9999,\n    MaxProperties: 100,\n    rooms: [{\n      adults,\n      children\n    }],\n    rating: [3, 4, 5],\n  };\n  var ratesPromise = [];\n  _.each(hotels, (hotel, i) => {\n    const hotelMediaParams = hotel;\n    const rateReq = Object.assign({}, hotelMediaParams, search);\n    ratesPromise.push(HotelService.rates(rateReq));\n  });\n  console.log(ratesPromise);\n  return Q.allSettled(ratesPromise);\n}\n\nexport function getAllHotels(location, checkInDate, checkOutDate, lat, long, adults, children) {\n  return Q.all([\n    searchForHotels(location, checkInDate, checkOutDate, lat, long, adults, children)\n  ]);\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of TravelportHotels\nexport function index(req, res) {\n  console.log(req.body)\n  return TravelportHotel.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single TravelportHotel from the api\n// lat = '33.924539';\n// long = '-118.356206';\nexport function show(req, res) {\n  return Q.all([\n      searchForHotels(req.params.id, moment().add(30, 'days').format('YYYY-MM-DD'), moment().add(35, 'days').format('YYYY-MM-DD'), '33.924539', '-118.356206', 1, 0)\n    ]).then(dat => {\n      return res.status(200).json(dat[0]);\n    })\n    .catch(handleError(res));\n\n  // return HotelService.search({\n  //   location: req.params.id,\n  //   startDate: moment().add(30, 'days').format('YYYY-MM-DD'),\n  //   endDate: moment().add(35, 'days').format('YYYY-MM-DD'),\n  //   currency: 'USD',\n  //   MaxWait: 9999,\n  //   MaxProperties: 10,\n  //   rooms: [{\n  //     adults: 1,\n  //   }],\n  //   rating: [3, 5],\n  // }).then(\n  //   res => {\n  //     console.log('****************** hit resposne *************************', res)\n  //     respondWithResult(res);\n  //   },\n  //   error => handleError(error)\n  // );\n}\n\n// Creates a new TravelportHotel in the DB\nexport function create(req, res) {\n  return TravelportHotel.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given TravelportHotel in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return TravelportHotel.findOneAndUpdate({\n    _id: req.params.id\n  }, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n  .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing TravelportHotel in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return TravelportHotel.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a TravelportHotel from the DB\nexport function destroy(req, res) {\n  return TravelportHotel.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}