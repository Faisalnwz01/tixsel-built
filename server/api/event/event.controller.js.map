{"version":3,"sources":["api/event/event.controller.js"],"names":["index","show","offers","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","JSON","parse","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","eventUrl","query","key","format","console","log","get","catch","eventDetailUrl","params","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","exec","findById"],"mappings":"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","file":"api/event/event.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/events              ->  index\n * POST    /api/events              ->  create\n * GET     /api/events/:id          ->  show\n * PUT     /api/events/:id          ->  upsert\n * PATCH   /api/events/:id          ->  patch\n * DELETE  /api/events/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Event from './event.model';\nimport rp from 'request-promise';\nimport moment from 'moment';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      entity = JSON.parse(entity);\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Events matching a given key\nexport function index(req, res) {\n  var eventUrl = `http://app.ticketmaster.com/discovery/v2/events.json?keyword=${req.query.key}&startDateTime=${moment().format('YYYY-MM-DDTHH:mm:ss')}Z&countryCode=US&apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ`;\n  console.log(eventUrl)\n  return rp.get(eventUrl).then(respondWithResult(res)).catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function show(req, res) {\n  var eventDetailUrl = 'http://app.ticketmaster.com/discovery/v2/events/' + req.params.id + '.json?apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ';\n  return rp.get(eventDetailUrl).then(respondWithResult(res)).catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function offers(req, res) {\n  var eventDetailUrl = 'http://app.ticketmaster.com/commerce/v2/events/' + req.params.id + '/offers.json?apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ';\n  return rp.get(eventDetailUrl).then(respondWithResult(res)).catch(handleError(res));\n}\n\n// Creates a new Event in the DB\nexport function create(req, res) {\n  return Event.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Event in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findOneAndUpdate({\n    _id: req.params.id\n  }, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n  .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Event in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Event from the DB\nexport function destroy(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}