{"version":3,"sources":["api/event/event.controller.js"],"names":["getEventOffer","index","show","eventRecommendation","offers","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","JSON","parse","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","id","eventDetailUrl","get","r","req","getAllEvents","query","key","data","conacted","events","venues","_embedded","each","a","i","clone","cloneDeep","push","assignIn","first","catch","params","eventsRecommendationUrl","eventUrl","format","venueUrl","console","log","all","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","exec","findById"],"mappings":"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","file":"api/event/event.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/events              ->  index\n * POST    /api/events              ->  create\n * GET     /api/events/:id          ->  show\n * PUT     /api/events/:id          ->  upsert\n * PATCH   /api/events/:id          ->  patch\n * DELETE  /api/events/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Event from './event.model';\nimport rp from 'request-promise';\nimport moment from 'moment';\nimport Q from 'q';\nimport _ from 'lodash';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      entity = JSON.parse(entity);\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\nexport function getEventOffer(id) {\n  var eventDetailUrl = 'http://app.ticketmaster.com/commerce/v2/events/' + id + '/offers.json?apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ';\n  return rp.get(eventDetailUrl)\n    .then(function (r) {\n      return JSON.parse(r);\n    });\n}\n\n// Gets a list of Events matching a given key\nexport function index(req, res) {\n\n  getAllEvents(req.query.key)\n    .then(function (data) {\n      var conacted = [];\n      const events = JSON.parse(data[0]);\n      const venues = JSON.parse(data[1]);\n      if (events._embedded) {\n        _.each(events._embedded.events, function (a, i) {\n          if (i === 0) {\n            var clone = _.cloneDeep(a);\n            conacted.push(_.assignIn(clone, {\n              first: true\n            }));\n          }\n          conacted.push(a);\n        });\n      }\n      if (venues._embedded) {\n        _.each(venues._embedded.venues, function (a, i) {\n          if (i === 0) {\n            var clone = _.cloneDeep(a);\n            conacted.push(_.assignIn(clone, {\n              first: true\n            }));\n          }\n          conacted.push(a);\n        });\n      }\n      return JSON.stringify(conacted);\n    })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function show(req, res) {\n  var eventDetailUrl = 'http://app.ticketmaster.com/discovery/v2/events/' + req.params.id + '.json?apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ';\n  return rp.get(eventDetailUrl).then(respondWithResult(res)).catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function eventRecommendation(req, res) {\n  var eventsRecommendationUrl = `https://api.seatgeek.com/2/recommendations?performers.id=2090&postal_code=90001&client_id=NTk1MjMxOXwxNDc2MzkwMTM0`;\n  return rp.get(eventsRecommendationUrl).then(respondWithResult(res)).catch(handleError(res));\n}\n\n// Gets a single Event from the DB\nexport function offers(req, res) {\n  getEventOffer(req.params.id)\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\nfunction getAllEvents(query) {\n  var eventUrl = `http://app.ticketmaster.com/discovery/v2/events.json?keyword=${query}&startDateTime=${moment().format('YYYY-MM-DDTHH:mm:ss')}Z&countryCode=US&apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ`;\n  var venueUrl = `https://app.ticketmaster.com/discovery/v2/venues.json?keyword=${query}&apikey=g4sXxf0ioySFxO0FQFYnGMEoAwW1uMoQ`;\n  console.log(eventUrl, venueUrl, '*****')\n  return Q.all([\n    rp.get(eventUrl),\n    rp.get(venueUrl)\n  ]);\n}\n// Creates a new Event in the DB\nexport function create(req, res) {\n  return Event.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Event in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findOneAndUpdate({\n    _id: req.params.id\n  }, req.body, {\n    upsert: true,\n    setDefaultsOnInsert: true,\n    runValidators: true\n  }).exec()\n\n  .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Event in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Event from the DB\nexport function destroy(req, res) {\n  return Event.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"],"sourceRoot":"/source/"}